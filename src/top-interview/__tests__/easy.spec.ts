import { searchInsert, solveSudoku } from '../easy';
describe('searchInsert', () => {
    const testData = [
        {
            input: {
                arr: [1, 3, 5, 6],
                target: 5,
            },
            expected: 2,
        },
        {
            input: {
                arr: [1, 3, 5, 6],
                target: 2,
            },
            expected: 1,
        },
        {
            input: {
                arr: [1, 3, 5, 6],
                target: 7,
            },
            expected: 4,
        },
    ];

    it.each(testData)('searchInsert %j', ({ input: { arr, target }, expected }) => {
        expect(searchInsert(arr, target)).toBe(expected);
    });
});

describe('solveSudoku', () => {
    const testData = [
        {
            input: [
                ['5', '3', '.', '.', '7', '.', '.', '.', '.'],
                ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
                ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
                ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
                ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
                ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
                ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
                ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
                ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
            ],
            expected: [
                ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
                ['6', '7', '2', '1', '9', '5', '3', '4', '8'],
                ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
                ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
                ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
                ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
                ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
                ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
                ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
            ],
        },
    ];

    it.each(testData)('solveSudoku %j', ({ input, expected }) => {
        solveSudoku(input);
        expect(input).toEqual(expected);
    });
});
